<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!-- Useful for describing APIs -->
<!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
]>
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="object_storage_api_overview">
    <title>Object Storage API overview</title>
    <para>OpenStack Object Storage is an object-based storage system
        that stores content and metadata as objects. You create,
        modify, and get objects and metadata by using the Object
        Storage API, which is implemented as a set of Representational
        State Transfer (REST) web services.</para>
    <para>You use the HTTPS (SSL) protocol to interact with Object
        Storage, and you use standard HTTP calls to perform API
        operations. You can also use language-specific APIs, which use
        the ReSTful API, that make it easier for you to integrate into
        your applications.</para>
    <para>The Object Storage system organizes data in a hierarchy, as
        follows:</para>
    <itemizedlist>
        <listitem>
            <para><emphasis role="bold">Account</emphasis>. Represents
                the top-level of the hierarchy.</para>
            <para>Your service provider creates your account and you
                own all resources in that account. The account defines
                a namespace for containers. A container might have the
                same name in two different accounts.</para>
            <para>In the OpenStack environment, the account is
                synonymous with a project or tenant.</para>
        </listitem>
        <listitem>
            <para><emphasis role="bold">Container</emphasis>. Contains
                objects. You can create any number of containers
                within an account.</para>
            <para>In addition to containing objects, you can also use
                the container to control access to objects by using an
                Access Control List (ACL). You cannot store an ACL
                with individual objects.</para>
            <para>In addition, many other features, such as <link
                    xlink:href="object-versioning">object
                    versioning</link>, are specified and controlled at
                the container level. The container defines a namespace
                for objects. An object of the same name in two
                different containers represents two different
                objects.</para>
        </listitem>
        <listitem>
            <para><emphasis role="bold">Object</emphasis>. Stores data
                content, such as documents, images, and so on.</para>
            <para>You can also store custom metadata with the
                object.</para>
            <para>You can store an unlimited number of objects. Each
                object can be as large as 5 GBs. With <link
                    xlink:href="large-object-creation">large object
                    creation</link>, you can upload and store objects
                of any size. You can also associate custom metadata
                with an object.</para>
        </listitem>
    </itemizedlist>
    <para>The account, container, and object hierarchy affects the way
        you interact with the Object Storage API. Specifically, the
        resource path reflects this structure and has this
        format:</para>
    <programlisting>/v1/{account}/{container}/{object}</programlisting>
    <para>For example, for the <literal>flowers/rose.jpg</literal>
        object in the <literal>images</literal> container in the
            <literal>12345678912345</literal> account, the resource
        path
        is:<programlisting>/v1/12345678912345/images/flowers/rose.jpg</programlisting>Notice
        that the object name contains the <literal>/</literal>
        character. This slash does not indicate that Object Storage
        has a sub-hierarchy called <literal>flowers</literal> because
        containers do not store objects in actual sub-folders.
        However, the inclusion of <literal>/</literal> or a similar
        convention inside object names enables you to create <link
            xlink:href="pseudo-hierarchical-folders-directories"
            >pseudo-hierarchical folders and
        directories</link>.</para>
    <para>To assert your right to access and change data in an
        account, you identify yourself to Object Storage by using an
            <link xlink:href="authentication">authentication</link>
        token. To get a token, you present your credentials to an
        authentication service. The authentication service returns a
        token and the URL for the account. Depending on which
        authentication service that you use, the URL for the account
        appears in:<itemizedlist>
            <listitem>
                <para><emphasis role="bold">OpenStack Identity
                        Service</emphasis>. The URL is defined in the
                    service catalog.</para>
            </listitem>
            <listitem>
                <para><emphasis role="bold">Tempauth</emphasis>. The
                    URL is provided in the
                        <literal>X-Storage-Url</literal> response
                    header.</para>
            </listitem>
        </itemizedlist>In both cases, the URL is the full URL and
        includes the account resource.</para>
    <para>For example, if the endpoint for Object Storage is
            <literal>objects.mycloud.com</literal>, the returned URL
        is
            <literal>https://objects.mycloud.com/v1/12345678912345</literal>.</para>
    <para>To access a container, append the container name to the
        resource path.</para>
    <para>To access an object, append the container and the object
        name to the path.</para>
    <para>The following sections describe the tasks that you can
        perform in the Object Storage system:</para>
    <itemizedlist>
        <listitem>
            <para><link xlink:href="storage-account-services">Storage
                    account services</link>. Use to perform
                account-level tasks.</para>
            <para>Lists containers for a specified account. Creates,
                updates, and deletes account metadata. Shows account
                metadata.</para>
        </listitem>
        <listitem>
            <para><link xlink:href="storage-container-services"
                    >Storage container services</link>. Use to perform
                container-level tasks.</para>
            <para>Lists objects in a specified container. Creates,
                shows details for, and deletes containers. Creates,
                updates, shows, and deletes container metadata.</para>
        </listitem>
        <listitem>
            <para><link xlink:href="storage-object-services">Storage
                    object services</link>. Use to perform
                object-level tasks.</para>
            <para>Creates, replaces, shows details for, and deletes
                objects. Copies objects with another object with a new
                or different name. Updates object metadata.</para>
        </listitem>
    </itemizedlist>
</section>
